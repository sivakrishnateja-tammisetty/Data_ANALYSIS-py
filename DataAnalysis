1. DATA ANALYSIS:
   -------------
  *Collection of data ==> collection of required data.

  *Processing of data
    *comparsion of data ==>comparsion is depends on user needs(apple & android).
    *Inspection of data  ==> Inspection means verification of data.

  *Cleaning of data  ==> Erasing  all unnecessary data.

  *Summarisation of data ==>It hepls the user to view the graph and get better clarity of the product. 



-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2. INSTALLING ANACONDA:
   --------------------
   *compare to pycharm ,Anaconda is user-friendy.
   *For the data analysis, we are using jupiter notebook.

step1 : download anaconda (Chrome)
step2 : open first link
step3:Anaconda Installers(for windows)
step4: search navigator(you find anaconda navigator).

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

3. LIBRARIES IMPORTANT PROPERITIES:
   ----------------------------------
 

                TITLE                                                   LIBRARIES
         -------------------------------------------------------------------------------
      1.Scientific computing Libraries                                pandas,numpy,sci-py

      2. visualization Libraries                                      Matlplotlib,seaborn,

      3. ALGORITHMIC LIBRARIES                                        scikit Learn, stats models








  *PANDAS are probablly known as 2-D arrays.They can be used for data frames and in case of data structures.
   *NUMPY are used for the purpose of arrays and matrics.
   * SCI-PY are used for the purpose of integral and differential equations.

 *MATPLOTLIB are used for plotting graphs.
 *SEABORN are used for plotting graphs,but we can plot different graphs.

 *SCIKIT LEARN are mostly prefered for machine learning concepts.
 *STATS MODELS are used to explore data used for statical models and perform statical test.






IMPORTANT PROPERITIES:
--------------------
   *Two important properities for importing the data.

      *FILE FORMAT:
         (.csv, .json, .hdf, .xlsx, ......)

      *FILE PATH:
         (C:/Desktop/Myfiles/mydata.csv)



----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

4. IMPORTING CSV FILES:
   -------------------
   *from (kaggle.com or google cloud public datasets ) site we can download datasets.

   *we are import csv file from python using jupiter notebook.





   Eg1:

   import pandas as pd
   path="c:/users/krishna/project//data analysis/auto-mpg.csv"
   df=pd.read_csv(path)
   print(df)


Note:I written above code in jupiter note book.



-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

5. METHODS TO VIEW FILE:
   ---------------------

* head(value) =>It displays the first  given no.of rows,which are present in the file.
   Eg:df.head(5)


* tail(value) =>It display the last given no.of rows,which are present in the file.
   Eg: df.tail(5)


* To save file:
   df.to_fileformat(path)
   Eg: df.to_csv(path)


* To view the datatypes of the file.
    Eg:df.dtypes


   Note:object referes numbers in string & int64 refers integer.


* df.describe()
   These helps us to return statical summary.


* df.describe(include="all")
   These helps us to return full statical summary.



* df.info()
   It provides concise summary of our dataframe(df).like how many entiries and  total no.of columns.


* df.columns
   It displays the columns which are occupied & dtatype of column are also displayed.



---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

6. DATA CLEANING:
   -------------

* How to import excel file?
* pre-processing means convert raw data into summarize data.


Eg:
import pandas as pd
path="c:/users/krishna/project//data analysis/auto-mpg.xlsx"
df=pd.read_excel(path)
print(df)



* To change headers in my excel file:

 Eg:
   headers=["s.no","Even","Odd","Multiples 5","multiples 4"]
   df.columns=headers
   df.head(5)



* To change odd colum to even numbers:

   Eg:
   df["Odd"]=df["Odd"]+1
   df.head(5)



* To remove row for excel :

    df.drop([label/row number],axis=0)

   Eg:
   df.drop([10],axis=0)


   Note: here axis=0 is row & axis=1 is column

                                    (OR)
   Eg: df.dropna()
      It will remove NAN entire row




* To replace NAN value to another number:

   we need to imort numpy library
   df["column"].replace(np.nan,new value)

   Eg:
   import numpy as np
   df["Even"].replace(np.nan,22)




----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


7. DATA FORMATTING:
   ---------------
   *Data formatting is nothing but just applying calculations  to our columns and renaming the column name and checking datatype of our data


   *I want to change" multiples of 4" column into "multiples of 2".

      Here iam changing data present in multiples of 4 column

      df["column"]=df["column"]/2

      Eg:
      df["multiples of 4"]=df["multiples of 4"]/2



   *Renaming column name into other name

   df.rename(columns={"old column name":"new column name"})

   Eg: 
      df.rename(columns={"multiples of 2":"Multiples of 2"})






*Converting from one datatype to another datatype for a particular column.

   df["column']=df["colum"].astype("datatype")
   Eg:
   df["multiples of 4"]=df["multiples of 4"].astype("int")




--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

